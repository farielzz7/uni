services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: laravel-app
    container_name: laravel-app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - '.:/var/www'
    networks:
      - laravel
    ports:
      - '8000:8000'
    command: 'php artisan serve --host=0.0.0.0 --port=8000'
    depends_on:
      - db
    environment:
      XDEBUG_MODE: debug
      XDEBUG_CONFIG: client_host=host.docker.internal

  webserver:
    image: nginx:alpine
    container_name: webserver
    restart: unless-stopped
    ports:
      - '80:80'
    volumes:
      - '.:/var/www'
      - './docker/nginx:/etc/nginx/conf.d'
    networks:
      - laravel
    depends_on:
      - app

  db:
    image: mysql:8.0
    container_name: db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: gp
      MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
    ports:
      - '3306:3306'
    volumes:
      - dbdata:/var/lib/mysql
    networks:
      - laravel

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: phpmyadmin
    restart: unless-stopped
    ports:
      - '8080:80'
    environment:
      PMA_HOST: db
      MYSQL_ROOT_PASSWORD: ''
    depends_on:
      - db
    networks:
      - laravel

  gitclone:
    image: alpine/git
    container_name: gitclone
    command: 'clone --depth=1 https://github.com/farielzz7/uni.git /cloned-repo'
    volumes:
      - './cloned:/cloned-repo'
    restart: 'no'
    networks:
      - laravel

volumes:
  dbdata:
    driver: local

networks:
  laravel:
    driver: bridge
